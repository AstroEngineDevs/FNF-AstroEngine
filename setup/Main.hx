/*

░█████╗░░██████╗████████╗██████╗░░█████╗░  ███████╗███╗░░██╗░██████╗░██╗███╗░░██╗███████╗
██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔══██╗  ██╔════╝████╗░██║██╔════╝░██║████╗░██║██╔════╝
███████║╚█████╗░░░░██║░░░██████╔╝██║░░██║  █████╗░░██╔██╗██║██║░░██╗░██║██╔██╗██║█████╗░░
██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██║░░██║  ██╔══╝░░██║╚████║██║░░╚██╗██║██║╚████║██╔══╝░░
██║░░██║██████╔╝░░░██║░░░██║░░██║╚█████╔╝  ███████╗██║░╚███║╚██████╔╝██║██║░╚███║███████╗
╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝░╚════╝░  ╚══════╝╚═╝░░╚══╝░╚═════╝░╚═╝╚═╝░░╚══╝╚══════╝
██╗███╗░░██╗░██████╗████████╗░█████╗░██╗░░░░░██╗░░░░░███████╗██████╗░
██║████╗░██║██╔════╝╚══██╔══╝██╔══██╗██║░░░░░██║░░░░░██╔════╝██╔══██╗
██║██╔██╗██║╚█████╗░░░░██║░░░███████║██║░░░░░██║░░░░░█████╗░░██████╔╝
██║██║╚████║░╚═══██╗░░░██║░░░██╔══██║██║░░░░░██║░░░░░██╔══╝░░██╔══██╗
██║██║░╚███║██████╔╝░░░██║░░░██║░░██║███████╗███████╗███████╗██║░░██║
╚═╝╚═╝░░╚══╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚══════╝╚══════╝╚═╝░░╚═╝
░█████╗░░█████╗░██████╗░███████╗
██╔══██╗██╔══██╗██╔══██╗██╔════╝
██║░░╚═╝██║░░██║██║░░██║█████╗░░
██║░░██╗██║░░██║██║░░██║██╔══╝░░
╚█████╔╝╚█████╔╝██████╔╝███████╗
░╚════╝░░╚════╝░╚═════╝░╚══════╝

maybe...
*/

package;

import haxe.Json;
import sys.FileSystem;
import sys.io.File;

typedef Library =
{
	name:String,
	type:String,
	version:String,
	dir:String,
	ref:String,
	url:String
}

class Main
{
	public static function main():Void
	{
		Sys.println('
░█████╗░░██████╗████████╗██████╗░░█████╗░  ███████╗███╗░░██╗░██████╗░██╗███╗░░██╗███████╗
██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔══██╗  ██╔════╝████╗░██║██╔════╝░██║████╗░██║██╔════╝
███████║╚█████╗░░░░██║░░░██████╔╝██║░░██║  █████╗░░██╔██╗██║██║░░██╗░██║██╔██╗██║█████╗░░
██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██║░░██║  ██╔══╝░░██║╚████║██║░░╚██╗██║██║╚████║██╔══╝░░
██║░░██║██████╔╝░░░██║░░░██║░░██║╚█████╔╝  ███████╗██║░╚███║╚██████╔╝██║██║░╚███║███████╗
╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝░╚════╝░  ╚══════╝╚═╝░░╚══╝░╚═════╝░╚═╝╚═╝░░╚══╝╚══════╝');
		Sys.println('
██╗███╗░░██╗░██████╗████████╗░█████╗░██╗░░░░░██╗░░░░░███████╗██████╗░
██║████╗░██║██╔════╝╚══██╔══╝██╔══██╗██║░░░░░██║░░░░░██╔════╝██╔══██╗
██║██╔██╗██║╚█████╗░░░░██║░░░███████║██║░░░░░██║░░░░░█████╗░░██████╔╝
██║██║╚████║░╚═══██╗░░░██║░░░██╔══██║██║░░░░░██║░░░░░██╔══╝░░██╔══██╗
██║██║░╚███║██████╔╝░░░██║░░░██║░░██║███████╗███████╗███████╗██║░░██║
╚═╝╚═╝░░╚══╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚══════╝╚══════╝╚═╝░░╚═╝');

		haxe.Timer.delay(runInstaller, 500);
	}

	private static function runInstaller():Void
	{
		final librarys:Array<Library> = Json.parse(File.getContent('./hmm.json')).dependencies;

		if (!FileSystem.exists(".haxelib"))
			FileSystem.createDirectory(".haxelib");

		for (data in librarys)
		{
			switch (data.type)
			{
				case "install", "haxelib":
					final version:String = data.version == null ? "" : data.version;
					Sys.command('haxelib --quiet install ${data.name} ${version}');
				case "git":
					final ref:String = data.ref == null ? "" : data.ref;
					Sys.command('haxelib --quiet git ${data.name} ${data.url} ${data.ref}');
				default:
					Sys.println('[ASTRO ENGINE SETUP]: Unable to resolve library of type "${data.type}" for library "${data.name}"');
			}
		}

		Sys.exit(0);
	}
}
